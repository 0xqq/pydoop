2009-09-27    <zag@manzanillo>

	* setup.py: Bumped to 0.2.5 (added support for application testing)

	* pydoop/pipes_runner.py (pipes_runner): Added a driver for
	application testing.

	* pydoop/text_protocol.py: Added support to directly talk pipes
	textual protocol.

	* pydoop/utils.py (make_input_split): Added a function to
	build input splits.

2009-09-22    <zag@manzanillo>

	* setup.py: Bumped to version 0.2.4

	* test/test_utils.py (utils_tc.split): updated to the new
	split_hdfs_path.

	* pydoop/utils.py (split_hdfs_path): Changed function
	internals. Now we follow the python way and use internal
	batteries (i.e. urlparse)
 
2009-09-21    <zag@manzanillo>

	* pydoop/utils.py (split_hdfs_path): Added handling of file:/// files.

	* pydoop/utils.py (jc_configure_float): added.

	* pydoop/pipes.py: now we export {Task,Map,Reduce}Context too.


2009-08-28    <zag@manzanillo.crs4.it>

	* setup.py: Bumped to version 0.2.3.

	* test/test_utils.py: added some testing.

	* pydoop/utils.py: using raise_pydoop_exception to raise what (I
	hope) will be a c++ compatible exception. It is probably the wrong thing to do. 

	* test/test_exceptions.py: added some basic tests for the new exceptions.

	* src/exceptions.cpp: Added. Contains translators that prepend the
	exception name to the exception message. Better than nothing. We
	currently support 'pydoop_exception' and 'pydoop_exception.pipes'.

	* src/exceptions.hpp: Added. All our c++ exception are now defined
	here. They will all be described as 'exception.UserWarning'

	* src/Makefile (machine): replaced machine=`uname -a` with machine=$(shell uname -m)

	* src/pipes_context.hpp: Removed horrible_hack. Now we simply do
	an incref on the string object. Basically, we are creating a
	memory leak inside python :-(. I do not see a clean way around
	this.

2009-08-13    <lsimleo@neuron.crs4.it>

	* src/pipes.hpp: added Py_REFCNT macro to make it work with Python
	2.5.

	* test/test_hdfs_basic_class.py: added assertRaises tests for
	IOError.

	* src/Makefile (PIPES_AUX_FILES): removed hacked_wrapper (the
	source file has been removed in an earlier version).

	* test/test_factory.py (factory_tc.test_map_reduce_factory):
	changed to clean up refs before performing test.

2009-08-10    <lsimleo@neuron.crs4.it>

	* src/hdfs_common.cpp: created. Adds hdfs_exception mapping to
	Python IOError.

2009-08-09    <zag@manzanillo>

	* pydoop/: Clean up.

	* src/: All test support stuff in pipes.{c,h}pp has been moved to
	pipes_test_support.{c,h}pp

	* test/test_factory.py (factory_tc.test_map_reduce_factory):
	Preparing to test C++ destruction.

2009-07-08    <lsimleo@neuron.crs4.it>

	* setup.py: updated to build hadoop_hdfs. Distutils sucks.

2009-07-07    <lsimleo@neuron.crs4.it>

	* setup.py: added auto main generation for boost extensions (as in
	src/Makefile). Updated to build pydoop_pipes.

2009-07-06    <lsimleo@neuron.crs4.it>

	* src/libhdfs/Makefile: slight generalization.

2009-07-03    <lsimleo@neuron.crs4.it>

	* src/{SerialUtils,HadoopPipes,StringUtils}.cpp: fixed includes.

2009-05-14    <lsimleo@neuron.crs4.it>

	* pydoop.py (Factory.createMapper): removed debug lines.
