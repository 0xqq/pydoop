Patches for Hadoop C++ source code
==================================

NOTE: this doc is intended for developers, users can safely skip it.

Starting from release 0.7, Pydoop includes the pipes/utils C++ source
code for all supported Hadoop versions: this allows to sidestep the
increasingly cumbersome automated search for C++ files, whose location
varies greatly with the Hadoop version tag.

A simple tool for importing the C++ code we need has been placed in scripts/:

  $ scripts/import_src /opt/hadoop-1.0.3

We store the unpatched source code under src/hadoop-<VERSION_TAG>
(this makes it easier to spot changes when a new version is released)
and patch it on-the-fly while building Pydoop.  Patches can also be
applied manually:

  $ patch -d src/hadoop-<VERSION_TAG> -p1 < patches/hadoop-<VERSION_TAG>.patch


Creating patches for new Hadoop releases
----------------------------------------

Let's say Cloudera has just released CDH version 4.1.0.  We want to
import the new C++ source and generate the corresponding patch:

  $ scripts/import_src /opt/hadoop-2.0.0-cdh4.1.0
  $ diff -urN src/hadoop-2.0.0-cdh4.{0.1,1.0}
  diff -urN src/hadoop-2.0.0-cdh4.0.1/pipes/impl/HadoopPipes.cc src/hadoop-2.0.0-cdh4.1.0/pipes/impl/HadoopPipes.cc
  --- src/hadoop-2.0.0-cdh4.0.1/pipes/impl/HadoopPipes.cc	2012-10-02 18:19:36.077520802 +0200
  +++ src/hadoop-2.0.0-cdh4.1.0/pipes/impl/HadoopPipes.cc	2012-10-03 12:50:58.480571415 +0200
  @@ -30,6 +30,7 @@
   #include <stdlib.h>
   #include <string.h>
   #include <strings.h>
  +#include <unistd.h>
   #include <sys/socket.h>
   #include <pthread.h>
   #include <iostream>

Lucky for us, changes from 4.0.1 are minimal.  We can try applying the
old patch and see if it works:

  $ patch -d src/hadoop-2.0.0-cdh4.1.0 -p1 < patches/hadoop-2.0.0-cdh4.0.1.patch 
  patching file pipes/impl/HadoopPipes.cc
  Hunk #1 succeeded at 127 (offset 1 line).
  patching file utils/impl/SerialUtils.cc

Great!  Now we can generate a proper patch for the new release:

  $ git diff --relative=src/hadoop-2.0.0-cdh4.1.0/ > patches/hadoop-2.0.0-cdh4.1.0.patch

NOTE: a common pitfall when using the above command is to assume that
--relative refers to a directory, while git interprets it as a general
prefix.  Thus, if both src/hadoop-0.20.2 and src/hadoop-0.20.2-cdh3u4
are present, src/hadoop-0.20.2 is a prefix for both, while
src/hadoop-0.20.2/ is only a prefix for the former.
